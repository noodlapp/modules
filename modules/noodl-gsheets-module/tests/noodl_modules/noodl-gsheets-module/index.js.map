{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/@noodl/noodl-sdk/index.js","webpack:///./node_modules/events/events.js","webpack:///./src/index.js","webpack:///./src/sheetparser.js"],"names":[],"mappings":";QAAA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;AClFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,kBAAkB;AAC/C;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA,4CAA4C,kBAAkB;AAC9D;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,kBAAkB;AACtD;AACA,kBAAkB;AAClB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA,SAAS,gBAAgB;AACzB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,SAAS;AACT;;AAEA;AACA;;AAEA;AACA;AACA;AACA,yCAAyC,kBAAkB;AAC3D;AACA;AACA,UAAU;AACV;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,uB;;;;;;;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,sBAAsB;AACvC;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;;AAEA,iCAAiC,QAAQ;AACzC;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,iBAAiB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,OAAO;AACP;AACA,sCAAsC,QAAQ;AAC9C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA;;AAEA;AACA,QAAQ,yBAAyB;AACjC;AACA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,6DAA6D,aAAa;AAC1E;AACA,6DAA6D,aAAa;AAC1E;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,oCAAoC,aAAa;AACjD;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;;;;;;;;;;;AChfA,cAAc,mBAAO,CAAC,kEAAkB;AACxC,iCAAiC,mBAAO,CAAC,2CAAe;AACxD,qBAAqB,mBAAO,CAAC,+CAAQ;;AAErC;;AAEA;AACA;;AAEA,uBAAuB,UAAU;AACjC;AACA;AACA,cAAc,eAAe;AAC7B,aAAa,cAAc;AAC3B,aAAa,cAAc;AAC3B,WAAW;AACX;;AAEA,gBAAgB,iBAAiB;AACjC;AACA;AACA;;AAEA,6EAA6E;AAC7E,+BAA+B,aAAa;AAC5C;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA,WAAW,6DAA6D;AACxE,aAAa,4DAA4D;AACzE,EAAE;AACF;AACA,UAAU,iDAAiD;AAC3D,SAAS,iDAAiD;AAC1D,eAAe;AACf,EAAE;AACF,U;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,oDAAoD,KAAK;AACzD;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B,UAAU;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;;AAEJ;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA,oBAAoB;;AAEpB;AACA;AACA;AACA,0BAA0B,qDAAqD;AAC/E;AACA;AACA,iBAAiB;;AAEjB;AACA;AACA;AACA,0BAA0B,sDAAsD;AAChF;AACA;AACA,iBAAiB;;AAEjB,+BAA+B,mCAAmC,mDAAmD,gBAAgB;AACrI;AACA;AACA;AACA,WAAW,mCAAmC;AAC9C;AACA;AACA;AACA,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA,IAAI;AACJ,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,WAAW,6DAA6D;AACxE,aAAa,4DAA4D;AACzE,EAAE;AACF;AACA,UAAU,iDAAiD;AAC3D,SAAS,iDAAiD;AAC1D,eAAe;AACf,EAAE;AACF,U;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA,oGAAoG,IAAI,UAAU,IAAI,aAAa,IAAI;AACvI,0BAA0B,UAAU;AACpC;AACA;AACA,qCAAqC,qBAAqB;AAC1D;AACA,MAAM;;AAEN;AACA;AACA;AACA;AACA,MAAM;AACN,KAAK;AACL,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,oBAAoB;;AAEpB,uEAAuE,gBAAgB;AACvF;AACA;AACA;AACA;AACA,YAAY,mCAAmC;AAC/C;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA,IAAI;AACJ,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,EAAE;AACF;AACA,EAAE;AACF,U;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,aAAa;AACb,GAAG;AACH;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA,oDAAoD,gBAAgB;AACpE;AACA;AACA;AACA;AACA,YAAY,yBAAyB;AACrC;AACA;AACA;AACA,MAAM;AACN;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,GAAG;AACH;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,E;;;;;;;;;;;ACrgBD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D,QAAQ;AAClE;AACA,kCAAkC,eAAe;AACjD;AACA;AACA,gCAAgC,+BAA+B;AAC/D;;AAEA;AACA;AACA;AACA;;AAEA;AACA,0FAA0F;AAC1F;;AAEA;AACA;AACA,eAAe,SAAS;AACxB,sEAAsE,mBAAmB,SAAS;AAClG;;AAEA;AACA;AACA;;AAEA;AACA,8HAA8H;AAC9H;AACA,wEAAwE,QAAQ;AAChF;AACA,qDAAqD,QAAQ;;AAE7D;AACA,SAAS;AACT;AACA;;AAEA;AACA;AACA,OAAO;;AAEP,cAAc;AACd;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA,2C","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const _colors = {\n    \"purple\":\"component\",\n    \"green\":\"data\",\n    \"default\":\"default\",\n    \"grey\":\"default\"\n}\n\nNoodl.defineNode = function(def) {\n    const _def = {};\n\n    _def.name = def.name;\n    _def.displayNodeName = def.displayName;\n    _def.usePortAsLabel = def.useInputAsLabel;\n    _def.color = _colors[def.color || 'default'];\n    _def.category = def.category || 'Modules';\n    _def.initialize = function() {\n        this.inputs = {};\n        var _outputs = this.outputs = {};\n        var _this = this;\n        this.setOutputs = function(o) {\n            for(var key in o) {\n                _outputs[key] = o[key];\n                _this.flagOutputDirty(key);\n            }\n        }\n        if(typeof def.initialize === 'function')\n            def.initialize.apply(this);\n    }\n    _def.inputs = {};\n    _def.outputs = {};\n\n    for(var key in def.inputs) {\n        _def.inputs[key] = {\n            type:(typeof def.inputs[key] === 'object')?def.inputs[key].type:def.inputs[key],\n            displayName:(typeof def.inputs[key] === 'object')?def.inputs[key].displayName:undefined,\n            group:(typeof def.inputs[key] === 'object')?def.inputs[key].group:undefined,\n            default:(typeof def.inputs[key] === 'object')?def.inputs[key].default:undefined,\n            set:(function() { const _key = key; return function(value) {\n                this.inputs[_key] = value;\n                if(def.changed && typeof def.changed[_key] === 'function') {\n                    def.changed[_key].apply(this,[value]);\n                }\n            }})()\n        }\n    }\n\n    for(var key in def.signals) {\n        _def.inputs[key] = {\n            type:'signal',\n            displayName:(typeof def.signals[key] === 'object')?def.signals[key].displayName:undefined,\n            valueChangedToTrue:(function() { const _key = key; return function() {\n                const _fn = (typeof def.signals[_key] === 'object')?def.signals[_key].signal:def.signals[_key]\n                if(typeof _fn === 'function') {\n                    this.scheduleAfterInputsHaveUpdated(() => {\n                        _fn.apply(this);\n                    }) \n                }\n            }})()\n        }\n    }\n\n    for(var key in def.outputs) {\n        if(def.outputs[key] === 'signal') {\n            _def.outputs[key] = {\n                type:'signal',\n            }\n        }\n        else {\n            _def.outputs[key] = {\n                type:(typeof def.outputs[key] === 'object')?def.outputs[key].type:def.outputs[key],\n                displayName:(typeof def.outputs[key] === 'object')?def.outputs[key].displayName:undefined,\n                group:(typeof def.outputs[key] === 'object')?def.outputs[key].group:undefined,\n                getter:(function() { const _key = key; return function() {\n                    return this.outputs[_key];\n                }})()\n            }\n        }\n    }\n\n    _def.methods = _def.prototypeExtensions = {};\n    for(var key in def.methods) {\n        _def.prototypeExtensions[key] = def.methods[key];\n    }\n    if(_def.methods.onNodeDeleted) { // Override the onNodeDeleted if required\n        _def.methods._onNodeDeleted = function() {\n            this.__proto__.__proto__._onNodeDeleted.call(this);\n            _def.methods.onNodeDeleted.value.call(this);\n        }\n    }\n\n    return {node:_def,setup:def.setup};\n}\n\nNoodl.defineCollectionNode = function(def) {\n    const _def = {\n        name:def.name,\n        category:def.category,\n        color:'data',\n        inputs:def.inputs,\n        outputs:Object.assign({\n            Items:'array',\n            'Fetch Started':'signal',\n            'Fetch Completed':'signal'\n        },def.outputs||{}),\n        signals:Object.assign({\n            Fetch:function() {\n                var _this = this;\n                this.sendSignalOnOutput('Fetch Started');\n                var a = def.fetch.call(this,function() {\n                    _this.sendSignalOnOutput('Fetch Completed');\n                });\n                this.setOutputs({\n                    Items:a\n                })\n            }\n        },def.signals||{})\n    }\n\n    return Noodl.defineNode(_def);\n}\n\nNoodl.defineModelNode = function(def) {\n    const _def = {\n        name:def.name,\n        category:def.category,\n        color:'data',\n        inputs:{\n            Id:'string'\n        },\n        outputs:{\n            Fetched:'signal'\n        },\n        changed:{\n            Id:function(value) {\n                if(this._object && this._changeListener)\n                    this._object.off('change',this._changeListener)\n                \n                this._object = Noodl.Object.get(value);\n                this._changeListener = (name,value) => {\n                    const _o = {}\n                    _o[name] = value;\n                    this.setOutputs(_o)\n                }\n                this._object.on('change',this._changeListener)\n\n                this.setOutputs(this._object.data);\n                this.sendSignalOnOutput('Fetched');\n            }\n        },\n        initialize:function() {\n\n        }\n    }\n\n    for(var key in def.properties) {\n        _def.inputs[key] = def.properties[key];\n        _def.outputs[key] = def.properties[key];\n        _def.changed[key] = (function() { const _key = key; return function(value) {\n            if(!this._object) return;\n            this._object.set(_key,value);\n        }})()\n    }\n \n    return Noodl.defineNode(_def);\n}\n\nNoodl.defineReactNode = function(def) {\n    var _def = Noodl.defineNode(def);\n\n    _def.node.getReactComponent = def.getReactComponent;\n    _def.node.inputProps = def.inputProps;\n    _def.node.inputCss = def.inputCss;\n    _def.node.outputProps = def.outputProps;\n    _def.node.setup = def.setup;\n\n    return _def.node;\n}\n\nmodule.exports = Noodl;","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\nmodule.exports.once = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    };\n\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\n","const Noodl = require('@noodl/noodl-sdk');\nconst PublicGoogleSheetsParser = require('./sheetparser')\nconst EventEmitter = require('events').EventEmitter\n\nvar _schemas,_schemaEvents\n\nfunction _addSheetToSchemas(id,sheet,cb) {\n\tconst parser = new PublicGoogleSheetsParser(id,sheet,\"limit 0\")\n\n\tparser.parse().then(({rows,cols}) => {\n\t\tconst schema = {}\n\t\tconst _types = {\n\t\t\t\"boolean\":{type:\"Boolean\"},\n\t\t\t\"string\":{type:\"String\"},\n\t\t\t\"number\":{type:\"Number\"},\n\t\t\t\"date\":{type:\"Date\"}\n\t\t}\n\n\t\tfor(var i = 0; i < cols.length; i++) {\n\t\t\tconst key = cols[i].label\n\t\t\tschema[key] = _types[cols[i].type]\n\t\t}\n\n\t\t_schemas[sheet||'_Default'] = Object.assign(_schemas[sheet||'_Default']||{},schema)\n\t\t_schemaEvents.emit('change',{schema:sheet})\n\t\tcb()\n\t})\n}\n\nconst QuerySheetNode = Noodl.defineNode({\n\tname:'noodl.gsheets.QuerySheetNode',\n\tdisplayName:'Query Sheet',\n\tcolor:'green',\n\tinputs:{\n\t\tsheetId:{displayName:'Document Id',group:'Sheet Source',type:'string'},\n\t\tsheetName:{displayName:'Sheet Name',group:'Sheet Source',type:'string'},\n\t},\n\toutputs:{\n\t\tresult:{displayName:'Items',group:'General',type:'array'},\n\t\tcount:{displayName:'Count',group:'General',type:'array'},\n\t\tfirstItemId:{displayName:'First Item Id',group:'General',type:'array'}\n\t},\n\tchanged:{\t\n\t\tsheetId() {\n\t\t\tthis.cols = undefined\n\t\t\tthis.scheduleQuery()\n\t\t},\n\t\tsheetName() {\n\t\t\tthis.cols = undefined\n\t\t\tthis.scheduleQuery()\n\t\t}\n\t},\n\tmethods:{\n\t\tscheduleQuery() {\n\t\t\tif(this.queryScheduled) return\n\t\t\tthis.queryScheduled = true\n\t\t\tthis.scheduleAfterInputsHaveUpdated(() => {\n\t\t\t\tthis.queryScheduled = false\n\t\t\t\tthis.runQuery()\n\t\t\t})\n\t\t},\n\t \t_formatFilter(query,options) {\n\t\t\tvar inputs = options.queryParameters;\n\t   \n\t\t   if(query.combinator !== undefined && query.rules !== undefined) {\n\t\t\t   if(query.rules.length === 0) return;\n\t\t\t   else if(query.rules.length === 1) return this._formatFilter(query.rules[0],options)\n\t\t\t   else {\n\t\t\t\t   const _res = '('\n\t\t\t\t   query.rules.forEach((r,idx) => {\n\t\t\t\t\t   var cond = this._formatFilter(r,options)\n\t\t\t\t\t   if(cond !== undefined) _res += cond\n\t\t\t\t\t   if(idx < query.rules.length-1) _res += query.combinator\n\t\t\t\t   })\n\t\t\t\t   _res += ')'\n\t   \n\t\t\t\t   return _res;\n\t\t\t   }\n\t\t   }\n\t\t   else {\n\t\t\t   var cond;\n\t\t\t   var value = query.input!==undefined?inputs[query.input]:query.value;\n\n\t\t\t   if(typeof value === 'string') value = \"'\" + value + \"'\"\n \t   \n\t\t\t   if(query.operator === 'exist') cond = 'is not null'\n\t\t\t   else if(query.operator === 'not exist') cond = 'is null'\n\t\t\t   else if(query.operator === 'greater than') cond = '> ' + value\n\t\t\t   else if(query.operator === 'greater than or equal to') cond = '>= ' + value\n\t\t\t   else if(query.operator === 'less than') cond = '< ' + value\n\t\t\t   else if(query.operator === 'less than or equal to') cond = '<= ' + value\n\t\t\t   else if(query.operator === 'equal to') cond = '= ' + value\n\t\t\t   else if(query.operator === 'not equal to') cond = '!= ' + value\n\t   \n\t\t\t   const _res = options.cols[query.property].id + \" \" + cond\n\t   \n\t\t\t   return _res;\n\t\t   }\n\t\t},\n\t\t_getColumns(cb) {\n\t\t\tif(this.cols !== undefined) return cb(this.cols)\n\t\t\tconst parser = new PublicGoogleSheetsParser(this.inputs.sheetId,this.inputs.sheetName,\"limit 0\")\n\t\t\tparser.parse().then(({rows,cols}) => {\n\t\t\t\tthis.cols = {}\n\t\t\t\tcols.forEach(c => this.cols[c.label] = c)\n\t\t\t\tcb(this.cols)\n\t\t\t})\n\t\t},\n\t\trunQuery() {\n\t\t\tthis._getColumns((cols) => {\n\t\t\t\t// Generate the query from the visual filter\n\t\t\t\tlet query\n\t\t\t\tif(this.filter !== undefined) {\n\t\t\t\t\tconst filter = this._formatFilter(this.filter,{cols})\n\t\t\t\t\tif(filter !== undefined) query = 'where ' + filter + ' '\n\t\t\t\t}\n\n\t\t\t\tif(this.sorting !== undefined) {\n\t\t\t\t\t query = (query||'') + 'order by ' + this.sorting.map((s,idx) => {\n\t\t\t\t\t\treturn  (idx !== 0?' ':'') + cols[s.property].id + (s.order === 'descending'?' desc':'')\n\t\t\t\t\t}).join(' ') + ' '\n\t\t\t\t}\n\n\t\t\t\tif(this.enableLimit) {\n\t\t\t\t\tquery = (query||'') + 'limit ' + (this.limit!==undefined?this.limit:10) + ' '\n\t\t\t\t\tif(this.skip !== undefined) query = (query||'') + 'offset ' + this.skip + ' '\n\t\t\t\t}\n\n\t\t\t\tconst parser = new PublicGoogleSheetsParser(this.inputs.sheetId,this.inputs.sheetName,query)\n\t\t\t\tparser.parse().then(({rows,cols}) => {\n\t\t\t\t\tconst results = Noodl.Array.get()\n\t\t\t\t\tresults.set(rows.map((r) => {\n\t\t\t\t\t\tlet _id\n\t\t\t\t\t\tif(this.useColumnForId !== undefined && this.useColumnForId !== '__none__') {\n\t\t\t\t\t\t\t_id = r[this.useColumnForId]\n\t\t\t\t\t\t\tdelete r[this.useColumnForId]\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet obj = Noodl.Object.get(_id)\n\t\t\t\t\t\tobj.setAll(r)\n\t\t\t\t\t\treturn obj\n\t\t\t\t\t}))\n\n\t\t\t\t\tthis.setOutputs({\n\t\t\t\t\t\tresult:results,\n\t\t\t\t\t\tcount:results.size(),\n\t\t\t\t\t\tfirstItemId:(results.size() > 0)?results.get(0).getId():undefined\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t},\n\t\tregisterInputIfNeeded: function (name) {\n\t\t\tif (this.hasInput(name)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(name === 'visualFilter') this.registerInput(name, {\n\t\t\t\tset: this.setFilter.bind(this)\n\t\t\t})\n\n\t\t\tif(name === 'visualSort') this.registerInput(name, {\n\t\t\t\tset: this.setSorting.bind(this)\n\t\t\t})\n\n\t\t\tif(name === 'enableLimit') this.registerInput(name, {\n\t\t\t\tset: this.setEnableLimit.bind(this)\n\t\t\t})\n\n\t\t\tif(name === 'limit') this.registerInput(name, {\n\t\t\t\tset: this.setLimit.bind(this)\n\t\t\t})\n\n\t\t\tif(name === 'skip') this.registerInput(name, {\n\t\t\t\tset: this.setSkip.bind(this)\n\t\t\t})\n\n\t\t\tif(name === 'columnForId') this.registerInput(name, {\n\t\t\t\tset: this.setColumnForId.bind(this)\n\t\t\t})\n\t\t},\t\t\n\t\tsetFilter(value) {\n\t\t\tthis.filter = value\n\t\t\tthis.scheduleQuery()\n\t\t},\n\t\tsetSorting(value) {\n\t\t\tthis.sorting = value\n\t\t\tthis.scheduleQuery()\n\t\t},\n\t\tsetEnableLimit(value) {\n\t\t\tthis.enableLimit = value\n\t\t\tthis.scheduleQuery()\n\t\t},\n\t\tsetLimit(value) {\n\t\t\tthis.limit = value\n\t\t\tthis.scheduleQuery()\n\t\t},\n\t\tsetSkip(value) {\n\t\t\tthis.skip = value\n\t\t\tthis.scheduleQuery()\n\t\t},\n\t\tsetColumnForId(value) {\n\t\t\tthis.useColumnForId = value\n\t\t\tthis.scheduleQuery()\n\t\t}\n\t},\n\tsetup: function (context, graphModel) {\n\t\tif (!context.editorConnection || !context.editorConnection.isRunningLocally()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(_schemas === undefined) _schemas = {}\n\t\tif(_schemaEvents === undefined) _schemaEvents = new EventEmitter()\n\n\t\tgraphModel.on(\"nodeAdded.noodl.gsheets.QuerySheetNode\", function (node) {\n\n\t\t\tfunction updatePorts() {\n\t\t\t\tvar ports = []\n\n\t\t\t\t// Limit\n\t\t\t\tports.push({\n\t\t\t\t\ttype: 'boolean',\n\t\t\t\t\tplug: 'input',\n\t\t\t\t\tgroup: 'Limit',\n\t\t\t\t\tname: 'enableLimit',\n\t\t\t\t\tdisplayName: 'Use limit',\n\t\t\t\t})\n\t\t\t\n\t\t\t\tif (node.parameters['enableLimit']) {\n\t\t\t\t\tports.push({\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdefault: 10,\n\t\t\t\t\t\tplug: 'input',\n\t\t\t\t\t\tgroup: 'Limit',\n\t\t\t\t\t\tname: 'limit',\n\t\t\t\t\t\tdisplayName: 'Limit',\n\t\t\t\t\t})\n\t\t\t\n\t\t\t\t\tports.push({\n\t\t\t\t\t\ttype: 'number',\n\t\t\t\t\t\tdefault: 0,\n\t\t\t\t\t\tplug: 'input',\n\t\t\t\t\t\tgroup: 'Limit',\n\t\t\t\t\t\tname: 'skip',\n\t\t\t\t\t\tdisplayName: 'Skip',\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst schema = {properties:_schemas[node.parameters.sheetName||'_Default']}\n\n\t\t\t\tports.push({\n                    name:'visualFilter',\n                    plug:'input',\n                    type:{name:'query-filter',schema:schema,allowEditOnly:true},\n                    displayName:'Filter',\n                    group:'Filter',\n                })\n\n                ports.push({\n                    name:'visualSort',\n                    plug:'input',\n                    type:{name:'query-sorting',schema:schema,allowEditOnly:true},\n                    displayName:'Sort',\n                    group:'Sorting',\n                })\n\n\t\t\t\tconst columnForIdEnums = [{label:'Unique id',value:'__none__'}].concat(Object.keys(schema.properties).map(k => ({value:k,label:k})))\n\t\t\t\tports.push({\n\t\t\t\t\tname:'columnForId',\n\t\t\t\t\tplug:'input',\n\t\t\t\t\ttype:{name:'enum',enums:columnForIdEnums},\n\t\t\t\t\tdisplayName:'Use Column For Id',\n\t\t\t\t\tgroup:'Sheet Source',\n\t\t\t\t\tdefault:'__none__'\n\t\t\t\t})\n\n\t\t\t\tcontext.editorConnection.sendDynamicPorts(node.id, ports);\n\t\t\t}\n\n\t\t\tif(node.parameters.sheetId) {\n\t\t\t\t_addSheetToSchemas(node.parameters.sheetId,node.parameters.sheetName,() => {\n\t\t\t\t\tupdatePorts();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tnode.on(\"parameterUpdated\", function (event) {\n\t\t\t\tif ((event.name === \"sheetId\" || event.name === \"sheetName\") && node.parameters.sheetId) {\n\t\t\t\t\t_addSheetToSchemas(node.parameters.sheetId,node.parameters.sheetName,() => {\n\t\t\t\t\t\tupdatePorts();\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tif(event.name === \"enableLimit\") updatePorts();\n\t\t\t})\n\t\t})\n\t}\n})\n\nconst QuerySheetUniqueColumnNode = Noodl.defineNode({\n\tname:'noodl.gsheets.QuerySheetUniqueColumnNode',\n\tdisplayName:'Query Sheet Unique',\n\tcolor:'green',\n\tinputs:{\n\t\tsheetId:{displayName:'Document Id',group:'Sheet Source',type:'string'},\n\t\tsheetName:{displayName:'Sheet Name',group:'Sheet Source',type:'string'},\n\t},\n\toutputs:{\n\t\tresult:{displayName:'Items',group:'General',type:'array'},\n\t\tcount:{displayName:'Count',group:'General',type:'array'},\n\t\tfirstItemId:{displayName:'First Item Id',group:'General',type:'array'}\n\t},\n\tchanged:{\t\n\t\tsheetId() {\n\t\t\tthis.cols = undefined\n\t\t\tthis.scheduleQuery()\n\t\t},\n\t\tsheetName() {\n\t\t\tthis.cols = undefined\n\t\t\tthis.scheduleQuery()\n\t\t}\n\t},\n\tmethods:{\n\t\tscheduleQuery() {\n\t\t\tif(this.queryScheduled) return\n\t\t\tthis.queryScheduled = true\n\t\t\tthis.scheduleAfterInputsHaveUpdated(() => {\n\t\t\t\tthis.queryScheduled = false\n\t\t\t\tthis.runQuery()\n\t\t\t})\n\t\t},\n\t\t_getColumns(cb) {\n\t\t\tif(this.cols !== undefined) return cb(this.cols)\n\t\t\tconst parser = new PublicGoogleSheetsParser(this.inputs.sheetId,this.inputs.sheetName,\"limit 0\")\n\t\t\tparser.parse().then(({rows,cols}) => {\n\t\t\t\tthis.cols = {}\n\t\t\t\tcols.forEach(c => this.cols[c.label] = c)\n\t\t\t\tcb(this.cols)\n\t\t\t})\n\t\t},\n\t\trunQuery() {\n\t\t\tthis._getColumns((cols) => {\n\t\t\t\tconst col = cols[this.column].id\n\t\t\t\tconst parser = new PublicGoogleSheetsParser(this.inputs.sheetId,this.inputs.sheetName,`select ${col}, count(${col}) group by ${col}`)\n\t\t\t\tparser.parse().then(({rows,cols}) => {\n\t\t\t\t\tconst results = Noodl.Array.get()\n\t\t\t\t\tresults.set(rows.map((r) => {\n\t\t\t\t\t\tlet obj = Noodl.Object.create({Value:r[this.column]})\n\t\t\t\t\t\treturn obj\n\t\t\t\t\t}))\n\t\n\t\t\t\t\tthis.setOutputs({\n\t\t\t\t\t\tresult:results,\n\t\t\t\t\t\tcount:results.size(),\n\t\t\t\t\t\tfirstItemId:(results.size() > 0)?results.get(0).getId():undefined\n\t\t\t\t\t})\n\t\t\t\t})\n\t\t\t})\n\t\t},\n\t\tregisterInputIfNeeded: function (name) {\n\t\t\tif (this.hasInput(name)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif(name === 'column') this.registerInput(name, {\n\t\t\t\tset: this.setColumn.bind(this)\n\t\t\t})\n\t\t},\t\t\n\t\tsetColumn(value) {\n\t\t\tthis.column = value\n\t\t\tthis.scheduleQuery()\n\t\t}\n\t},\n\tsetup: function (context, graphModel) {\n\t\tif (!context.editorConnection || !context.editorConnection.isRunningLocally()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(_schemas === undefined) _schemas = {}\n\t\tif(_schemaEvents === undefined) _schemaEvents = new EventEmitter()\n\n\t\tgraphModel.on(\"nodeAdded.noodl.gsheets.QuerySheetUniqueColumnNode\", function (node) {\n\n\t\t\tfunction updatePorts() {\n\t\t\t\tvar ports = []\n\n\t\t\t\tconst schema = {properties:_schemas[node.parameters.sheetName||'_Default']}\n\n\t\t\t\tconst columnForIdEnums = Object.keys(schema.properties).map(k => ({value:k,label:k}))\n\t\t\t\tif(columnForIdEnums.length > 0) {\n\t\t\t\t\tports.push({\n\t\t\t\t\t\tname:'column',\n\t\t\t\t\t\tplug:'input',\n\t\t\t\t\t\ttype:{name:'enum',enums:columnForIdEnums},\n\t\t\t\t\t\tdisplayName:'Column',\n\t\t\t\t\t\tgroup:'Sheet Source',\n\t\t\t\t\t\tdefault:columnForIdEnums[0].value\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tcontext.editorConnection.sendDynamicPorts(node.id, ports);\n\t\t\t}\n\n\t\t\tif(node.parameters.sheetId) {\n\t\t\t\t_addSheetToSchemas(node.parameters.sheetId,node.parameters.sheetName,() => {\n\t\t\t\t\tupdatePorts();\n\t\t\t\t})\n\t\t\t}\n\n\t\t\tnode.on(\"parameterUpdated\", function (event) {\n\t\t\t\tif ((event.name === \"sheetId\" || event.name === \"sheetName\") && node.parameters.sheetId) {\n\t\t\t\t\t_addSheetToSchemas(node.parameters.sheetId,node.parameters.sheetName,() => {\n\t\t\t\t\t\tupdatePorts();\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n})\n\nconst SheetRowNode = Noodl.defineNode({\n\tname:'noodl.gsheets.SheetRowNode',\n\tdisplayName:'Sheet Row',\n\tcolor:'green',\n\tinputs:{\n\t\trowId:{type:'string',displayName:'Row Id',allowConnectionsOnly:true}\n\t},\n\toutputs:{\n\t},\n\tchanged:{\t\n\t\trowId(value) {\n\t\t\tthis.rowObject = Noodl.Object.get(value)\n\t\t\tthis.updateOutputs()\n\t\t}\n\t},\n\tmethods:{\n\t\tregisterOutputIfNeeded(name) {\n\t\t\tif (this.hasOutput(name)) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (name.startsWith('prop-')) this.registerOutput(name, {\n                getter: this.getColumnValue.bind(this, name.substring('prop-'.length))\n            })\n\t\t},\t\n\t\tgetColumnValue(name) {\n\t\t\tif(this.rowObject === undefined) return\n\t\t\treturn this.rowObject.get(name)\n\t\t},\n\t\tupdateOutputs() {\n\t\t\tif(this.rowObject === undefined) return\n\t\t\tconst out = {}\n\t\t\tObject.keys(this.rowObject.data).forEach(k => out['prop-'+k] = this.rowObject[k])\n\t\t\tthis.setOutputs(out)\n\t\t}\n\t},\n\tsetup: function (context, graphModel) {\n\t\tif (!context.editorConnection || !context.editorConnection.isRunningLocally()) {\n\t\t\treturn;\n\t\t}\n\n\t\tif(_schemas === undefined) _schemas = {}\n\t\tif(_schemaEvents === undefined) _schemaEvents = new EventEmitter()\n\n\t\tgraphModel.on(\"nodeAdded.noodl.gsheets.SheetRowNode\", function (node) {\n\n\t\t\tfunction updatePorts() {\n\t\t\t\tvar ports = []\n\n\t\t\t\tconst sheets = Object.keys(_schemas).map(k => ({value:k,label:k}))\n\t\t\t\tif(sheets.length > 1) {\n\t\t\t\t\tports.push({\n\t\t\t\t\t\tname:'sheet',\n\t\t\t\t\t\tplug:'input',\n\t\t\t\t\t\ttype:{name:'enum',enums:sheets},\n\t\t\t\t\t\tdisplayName:'Sheet',\n\t\t\t\t\t\tgroup:'General',\n\t\t\t\t\t\tdefault:sheets[0].value\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tconst schema = _schemas[node.parameters['sheet'] || '_Default']\n\t\t\t\tif(schema !== undefined) {\n\t\t\t\t\tObject.keys(schema).forEach(prop => {\n\t\t\t\t\t\tconst type = schema[prop].type\n\t\t\t\t\t\tconst _types = {\n\t\t\t\t\t\t\t\"Boolean\":\"boolean\",\n\t\t\t\t\t\t\t\"Number\":\"number\",\n\t\t\t\t\t\t\t\"String\":\"string\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tports.push({\n\t\t\t\t\t\t\tname:'prop-'+prop,\n\t\t\t\t\t\t\tplug:'output',\n\t\t\t\t\t\t\ttype:_types[type]||'*',\n\t\t\t\t\t\t\tdisplayName:prop,\n\t\t\t\t\t\t\tgroup:'Columns'\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\tcontext.editorConnection.sendDynamicPorts(node.id, ports);\n\t\t\t}\n\n\t\t\tupdatePorts()\n\t\t\t_schemaEvents.on('change',() => {\n\t\t\t\tupdatePorts()\n\t\t\t})\n\t\t})\n\t}\n})\n\nNoodl.defineModule({\n    nodes:[\n\t\tQuerySheetNode,\n\t\tQuerySheetUniqueColumnNode,\n\t\tSheetRowNode\n    ],\n    setup() {\n    \t//this is called once on startup\n    }\n});","class PublicGoogleSheetsParser {\n    constructor (spreadsheetId, sheetName,query) {\n      this.id = spreadsheetId\n      this.sheetName = sheetName\n      this.query = query\n    }\n  \n    getSpreadsheetDataUsingFetch () {\n      // Read data from the first sheet of the target document.\n      // It cannot be used unless everyone has been given read permission.\n      // It must be a spreadsheet document with a header, as in the example document below.\n      // spreadsheet document for example: https://docs.google.com/spreadsheets/d/10WDbAPAY7Xl5DT36VuMheTPTTpqx9x0C5sDCnh4BGps/edit#gid=1719755213\n      if (!this.id) return null\n      let url = `https://docs.google.com/spreadsheets/d/${this.id}/gviz/tq?`\n      if (this.sheetName) {\n        url = url.concat(`sheet=${this.sheetName}`)\n      }\n      if (this.query) {\n        url = url.concat(`&tq=${encodeURIComponent(this.query)}`)\n      }\n\n      return fetch(url)\n        .then((r) => r && r.ok && r.text ? r.text() : null)\n        .catch(/* istanbul ignore next */(_) => null)\n    }\n  \n    normalizeRow (rows) {\n      return rows.map((row) => (row && (row.v !== null && row.v !== undefined)) ? row : {})\n    }\n  \n    applyHeaderIntoRows (header, rows) {\n      return rows\n        .map(({ c: row }) => this.normalizeRow(row))\n        .map((row) => row.reduce((p, c, i) => c.v ? Object.assign(p, { [header[i]]: c.v }) : p, {}))\n    }\n  \n    getItems (spreadsheetResponse) {\n      let rows = []\n      let cols = []\n  \n      try {\n        const parsedJSON = JSON.parse(spreadsheetResponse.split('\\n')[1].replace(/google.visualization.Query.setResponse\\(|\\);/g, ''))\n        cols = parsedJSON.table.cols\n        const hasSomeLabelPropertyInCols = parsedJSON.table.cols.some(({ label }) => !!label)\n        if (hasSomeLabelPropertyInCols) {\n          const header = parsedJSON.table.cols.map(({ label }) => label)\n  \n          rows = this.applyHeaderIntoRows(header, parsedJSON.table.rows)\n        } else {\n          const [headerRow, ...originalRows] = parsedJSON.table.rows\n          const header = this.normalizeRow(headerRow.c).map((row) => row.v)\n  \n          rows = this.applyHeaderIntoRows(header, originalRows)\n        }\n      } catch (e) {}\n  \n      return {rows,cols}\n    }\n  \n    async parse (spreadsheetId, sheetName,query) {\n      if (spreadsheetId) this.id = spreadsheetId\n      if (sheetName) this.sheetName = sheetName\n      if (query) this.query = query\n  \n      if (!this.id) throw new Error('SpreadsheetId is required.')\n  \n      const spreadsheetResponse = await this.getSpreadsheetDataUsingFetch()\n  \n      if (spreadsheetResponse === null) return []\n  \n      return this.getItems(spreadsheetResponse)\n    }\n  }\n\n  module.exports = PublicGoogleSheetsParser"],"sourceRoot":""}